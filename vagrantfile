# Vagrantfile

Vagrant.configure("2") do |config|
  # Define the DHCP Server
  config.vm.define "G1" do |g1|
    g1.vm.box = "ubuntu/bionic64" # Use an Ubuntu 18.04 LTS box, you can change it to any other Debian-based box
    g1.vm.network "private_network", ip: "192.168.1.254"
    g1.vm.provision "shell", inline: <<-SHELL
      sudo apt-get update
      sudo apt-get install -y isc-dhcp-server
      sudo bash -c 'cat > /etc/dhcp/dhcpd.conf' <<EOF
      option domain-name "example.com";
      option domain-name-servers ns1.example.com, ns2.example.com;
      default-lease-time 600;
      max-lease-time 7200;
      authoritative;
      subnet 192.168.1.0 netmask 255.255.255.0 {
        range 192.168.1.1 192.168.1.150;
        option routers 192.168.1.254;
        option subnet-mask 255.255.255.0;
        option broadcast-address 192.168.1.255;
        option domain-name-servers 8.8.8.8, 8.8.4.4;
      }
      EOF
      sudo systemctl restart isc-dhcp-server
      sudo systemctl enable isc-dhcp-server
    SHELL
  end

  # Define the first client
  config.vm.define "M1" do |m1|
    m1.vm.box = "ubuntu/bionic64"
    m1.vm.network "private_network", type: "dhcp"
    m1.vm.provision "shell", inline: <<-SHELL
      sudo bash -c 'cat > /etc/netplan/01-netcfg.yaml' <<EOF
      network:
        version: 2
        ethernets:
          eth0:
            dhcp4: true
      EOF
      sudo netplan apply
    SHELL
  end

  # Define the second client
  config.vm.define "M2" do |m2|
    m2.vm.box = "ubuntu/bionic64"
    m2.vm.network "private_network", type: "dhcp"
    m2.vm.provision "shell", inline: <<-SHELL
      sudo bash -c 'cat > /etc/netplan/01-netcfg.yaml' <<EOF
      network:
        version: 2
        ethernets:
          eth0:
            dhcp4: true
      EOF
      sudo netplan apply
    SHELL
  end
end

